(let fact : int->int =
  fix f (n:int) : int ->
    if n <= 0 then
      1
    else
      n * f (n - 1)
in
fact (5),
let min : int->(int list->int) =
  fix f (cur:int) : (int list->int) ->
    fun (l:int list) : int ->
    if (empty l) then
      cur
    else
      if (hd l) < cur then
        f (hd l) (tl l)
      else
        f (cur) (tl l)
in
min (100) (10 :: 20 :: 5 :: 70 :: 3 :: 80 :: 1000 :: [] : int))
